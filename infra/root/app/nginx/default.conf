# HTTP - aceita requisições da Cloudflare
server {
    listen 80;
    server_name _;

    resolver 127.0.0.11 valid=10s ipv6=off;
    resolver_timeout 5s;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    client_max_body_size 50M;

    # Health check do nginx (sempre responde)
    location /health {
        access_log off;
        return 200 "nginx: healthy\n";
        add_header Content-Type text/plain;
    }

    # Proxy para backend
    location / {
        # Resolve DNS dinamicamente (permite backend offline na inicialização)
        set $backend "cupcake-bknd:3333";
        proxy_pass http://$backend;

        proxy_http_version 1.1;

        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;

        # Timeouts curtos para detectar backend offline rapidamente
        proxy_connect_timeout 3s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Interceptar erros para mostrar página customizada
        proxy_intercept_errors on;
    }

    # Página customizada quando backend está offline (502, 503, 504)
    error_page 502 503 504 /502.html;
    location = /502.html {
        root /usr/share/nginx/html;
        internal;
    }
}

# HTTPS - conexão segura da Cloudflare
server {
    listen 443 ssl;
    http2 on;
    server_name _;

    ssl_certificate /etc/nginx/ssl/synit-certificate.pem;
    ssl_certificate_key /etc/nginx/ssl/synit-key.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    resolver 127.0.0.11 valid=10s ipv6=off;
    resolver_timeout 5s;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Headers de segurança
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    client_max_body_size 50M;

    # Health check do nginx
    location /health {
        access_log off;
        return 200 "nginx: healthy\n";
        add_header Content-Type text/plain;
    }

    # Proxy para backend
    location / {
        set $backend "cupcake-bknd:3333";
        proxy_pass http://$backend;

        proxy_http_version 1.1;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Host $host;

        proxy_connect_timeout 3s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        proxy_intercept_errors on;
    }

    # Página customizada quando backend está offline
    error_page 502 503 504 /502.html;
    location = /502.html {
        root /usr/share/nginx/html;
        internal;
    }
}